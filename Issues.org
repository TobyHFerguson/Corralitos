#+TITLE: Issues
#+STARTUP: nologdone
* DONE Ensure Guest Additions gets added #1
CLOSED: [2015-01-06 Tue 07:19]
:LOGBOOK:  
- CLOSING NOTE [2015-01-06 Tue 07:19] \\
  The issues is that the kernel used to boot from is not the kernel subsequently installed.
  
  So the =base.sh= script adds the necessary packages
:END:      
At the moment Guest Additions fails to get added to the built system.

The result I'm seeing is here:
#+BEGIN_EXAMPLE
[toby@dell-server-2 Packer]$ vagrant up
Bringing machine 'default' up with 'virtualbox' provider...
==> default: Clearing any previously set forwarded ports...
==> default: Clearing any previously set network interfaces...
==> default: Preparing network interfaces based on configuration...
    default: Adapter 1: nat
==> default: Forwarding ports...
    default: 22 => 2222 (adapter 1)
==> default: Booting VM...
==> default: Waiting for machine to boot. This may take a few minutes...
    default: SSH address: 127.0.0.1:2222
    default: SSH username: vagrant
    default: SSH auth method: private key
    default: Warning: Connection timeout. Retrying...
==> default: Machine booted and ready!
No installation found.
Loaded plugins: security
Setting up Install Process
No package kernel-devel-3.8.13-16.2.1.el6uek.x86_64 available.
Package gcc-4.4.7-11.el6.x86_64 already installed and latest version
Package 1:make-3.81-20.el6.x86_64 already installed and latest version
Package 4:perl-5.10.1-136.el6_6.1.x86_64 already installed and latest version
Nothing to do
Copy iso file /usr/share/virtualbox/VBoxGuestAdditions.iso into the box /tmp/VBoxGuestAdditions.iso
Installing Virtualbox Guest Additions 4.3.18 - guest version is 
Verifying archive integrity... All good.
Uncompressing VirtualBox 4.3.18 Guest Additions for Linux............
VirtualBox Guest Additions installer
Removing installed version 4.3.18 of VirtualBox Guest Additions...
Copying additional installer modules ...
Installing additional modules ...
Removing existing VirtualBox non-DKMS kernel modules[  OK  ]
Building the VirtualBox Guest Additions kernel modules
The headers for the current running kernel were not found. If the following
module compilation fails then this could be the reason.
The missing package can be probably installed with
yum install kernel-uek-devel-3.8.13-16.2.1.el6uek.x86_64

Building the main Guest Additions module[FAILED]
(Look at /var/log/vboxadd-install.log to find out what went wrong)
Doing non-kernel setup of the Guest Additions[  OK  ]
Installing the Window System drivers
Could not find the X.Org or XFree86 Window System, skipping.
An error occurred during installation of VirtualBox Guest Additions 4.3.18. Some functionality may not work as intended.
In most cases it is OK that the "Window System drivers" installation failed.
==> default: Checking for guest additions in VM...
    default: No guest additions were detected on the base box for this VM! Guest
    default: additions are required for forwarded ports, shared folders, host only
    default: networking, and more. If SSH fails on this machine, please install
    default: the guest additions and repackage the box to continue.
    default: 
    default: This is not an error message; everything may continue to work properly,
    default: in which case you may ignore this message.
==> default: Mounting shared folders...
    default: /vagrant => /shared/Vagrant/Packer
Failed to mount folders in Linux guest. This is usually because
the "vboxsf" file system is not available. Please verify that
the guest additions are properly installed in the guest and
can work properly. The command attempted was:

mount -t vboxsf -o uid=`id -u vagrant`,gid=`getent group vagrant | cut -d: -f3` vagrant /vagrant
mount -t vboxsf -o uid=`id -u vagrant`,gid=`id -g vagrant` vagrant /vagrant

The error output from the last command was:

/sbin/mount.vboxsf: mounting failed with the error: No such device

[toby@dell-server-2 Packer]$ 
#+END_EXAMPLE

However I think the failure occurred earlier, when the build failed to provide the needed gcc and kernel-uek-devel packages.

gcc is installed, but not the =kernel-uek-devel= package that corresponds to the installed kernel.

I note that during the install the following uek kernel packages were installed:
#+BEGIN_EXAMPLE
[root@localhost vagrant]# grep kernel-uek /root/install.log
Installing kernel-uek-firmware-3.8.13-16.2.1.el6uek.noarch
Installing kernel-uek-3.8.13-16.2.1.el6uek.x86_64
#+END_EXAMPLE
This is from the '%packages' section.

The kickstart file contained:
#+BEGIN_EXAMPLE
 Kickstart file automatically generated by anaconda.

#version=DEVEL
install
cdrom
lang en_US.UTF-8
keyboard us
network --onboot yes --device eth0 --bootproto dhcp --noipv6
rootpw  --iscrypted $1$gJ4aOI0G$rJsg9xcKG5TIwXM6Iv4Qo.
# Reboot after installation
reboot
firewall --service=ssh
authconfig --useshadow --enablemd5
selinux --permissive
timezone --utc America/Los_Angeles
bootloader --location=mbr --driveorder=sda --append="crashkernel=auto rhgb rhgb quiet quiet"
# The following is the partition information you requested
# Note that any partitions you deleted are not expressed
# here so unless you clear all partitions first, this is
# not guaranteed to work
#clearpart --all --initlabel
#volgroup VolGroup --pesize=4096 pv.008002
#logvol /home --fstype=ext4 --name=lv_home --vgname=VolGroup --grow --size=100
#logvol / --fstype=ext4 --name=lv_root --vgname=VolGroup --grow --size=1024 --maxsize=51200
#logvol swap --name=lv_swap --vgname=VolGroup --grow --size=992 --maxsize=992

#part /boot --fstype=ext4 --size=500
#part pv.008002 --grow --size=1



%packages --ignoremissing
@Base
@Core
@core
kernel-devel
kernel-headers

%end

%post
/usr/bin/yum -y install sudo
/usr/sbin/useradd vagrant
echo "vagrant"|passwd --stdin vagrant
echo "vagrant ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers.d/vagrant
chmod 0440 /etc/sudoers.d/vagrant
%end
#+END_EXAMPLE

I'm unclear why the kernel-uek-devel-3.8.13 package wasn't installed.

I do see that the =kernel-devel-2.6.32-431.el6.x86_64= package is installed.

I see that the kickstart file includes the UEKR3 repo, but doesn't attempt to install the =kernel-uek-devel= or =kernel-uek-headers= files - maybe that'll do the trick ...

* DONE Reduce number of rpms down to a minimum
CLOSED: [2015-01-06 Tue 07:18]
:LOGBOOK:  
- CLOSING NOTE [2015-01-06 Tue 07:18] \\
  The trick is to add =--nobase= to %packages section
:END:      
Currently 414 rpms are being loaded. I *think* I can reduce this by adding =--nodefaults= to the =@core= package selection

Failing that I should examine what packages were used in ol6minimal - that was created by hand and used the 'Minimal' setting during install.

I can probably add =--excludedocs==

* DONE I want to make this a minimal install using btrfs
CLOSED: [2015-01-06 Tue 07:21]
:LOGBOOK:  
- CLOSING NOTE [2015-01-06 Tue 07:21]
:END:      
I need to boot from the UEK boot iso, and have the ol6 iso available via http

I shall make the kickstart file available at =http://localhost/kickstart/ks.cfg= and the iso available at =http://localhost/ol6=

I boot using the following line:

#+BEGIN_SRC 
ks=http://{{ .HTTPIP }}:{{ .HTTPPort }}/kickstart/ks.cfg repo=http://{{ .HTTPIP }}:{{ .HTTPPort }}/ol6
#+END_SRC

However this does require me to locally mount the ol6 iso.

I learnt from Ryan Chouinard that all the OL6 distributions are also available online at http://mirrors.dotsrc.org/oracle-linux/OL6/U6/x86_64/ - this is fantastic, as it means I can now point others to this source!

But this won't work directly - I can use it for the boot iso location, but not as the installation location - the installation tree needs to be an expanded fileset, not an ISO.

Even using the =repo=nfsiso:...= construct doesn't work for OL6. The remote repo has to be an installation tree, not an iso, unfortunately.

* DONE Add scp capability to copy artefacts to tobyhferguson.org
CLOSED: [2015-01-07 Wed 11:04]
:LOGBOOK:  
- CLOSING NOTE [2015-01-07 Wed 11:04] \\
  Updated the README.org file
:END:
* TODO #4 Replace mounted iso with cd iso
I need to add the ol6.iso as the second cd, and to alter the keyboard command to use that repo

I need to test this release out to ensure it works properly. 
* TODO #5 Make a template that ensures that the image is up to date
Need to do two things:
+ Update and then delete any old packages
+ Reboot to ensure that the Guest Additions are updated properly
+ Make notes in =vagrant.org= about the overall workflow for updating a specific box and replacing it.
* TODO #6 Update tobyhferguson.org to provide a 'boxes' page which describes the boxes I'm building
* TODO #7 Make a github project for these templates that links to my boxes page
* TODO #8 Add dkms package
Need to install this from epel
* TODO #9 Add an additional build for an LVM based system
