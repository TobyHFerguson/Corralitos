#+TITLE: Oracle Linux 6U5 Minimal BTRFS UEK Build
#+STARTUP: showall nohideblocks
* Overview
This build will construct (using [[http://packer.io][Packer]]) an OL6U5 [[http://vagrantup.com][Vagrant]] box with the following properties:
+ Minimal
+ Btrfs / filesystem
+ UEK
* Software Required
You need to install [[http://packer.io][Packer]],  [[http://vagrantup.com][Vagrant]]  and [[http://VirtualBox.org][VirtualBox]] to perform the build.

The software to install Oracle Linux using btrfs as the root file system comes in two isos.
+ The boot iso can be accessed remotely via http, or downloaded locally (Packer will cache the http downloaded copy locally, so storing locally is only necessary if multiple /different/ builds will use the same iso
+ the install iso /must/ be downloaded and accessed via the file system (it can be NFS mounted and it can be a symbolic link, but must be accessible as a file on the file system).

The URLs and their sha1 checksums are:
| URL                                     | sha1                                     |
| [[http://mirrors.dotsrc.org/oracle-linux/OL6/U5/x86_64/x86_64-boot-uek.iso][x86_64-boot-uek.iso]]                     | 7995ee8c6b5b55aba13df0e292139b3efa8f415e |
| [[http://mirrors.dotsrc.org/oracle-linux/OL6/U5/x86_64/OracleLinux-R6-U5-Server-x86_64-dvd.iso][OracleLinux-R6-U5-Server-x86_64-dvd.iso]] | a65041fbe0ba67e3ff6f5f93804a8f47d5b5f132 |

* Operation
** Packer Template
The Packer template (=template.json=) uses variables whose defaults correspond to locating the boot iso remotely, and locating the install iso in the current directory. Running =inspect= reveals the details:
#+BEGIN_EXAMPLE
$ packer inspect uek-local.json 
Optional variables and their defaults:

  install_iso_file      = OracleLinux-R6-U5-Server-x86_64-dvd.iso
  name                  = ol6u5-minimal-btrfs-uek
  uek_iso_checksum      = 7995ee8c6b5b55aba13df0e292139b3efa8f415e
  uek_iso_checksum_type = sha1
  uek_iso_url           = http://mirrors.dotsrc.org/oracle-linux/OL6/U5/x86_64/x86_64-boot-uek.iso

Builders:

  virtualbox-iso

Provisioners:

  shell
#+END_EXAMPLE
These variables can be overwritten at run-time. For example, to change the default name to 'myvm':
#+BEGIN_SRC sh
packer build -var 'name=myvm' template.json
#+END_SRC
** Building the box
Build thus:
#+BEGIN_SRC sh
packer build template.json
#+END_SRC
This will build a box in the current directory called =ol6u5-minimal-btrfs-uek.box=
** Publishing and Using the box
*** To the local Vagrant system
Publish thus:
#+BEGIN_SRC sh
vagrant box add --force ol6u5-minimal-btrfs-uek ol6u5-minimal-btrfs-uek.box
#+END_SRC
Access this box by adding the following to your =Vagrantfile= to access this box:
#+BEGIN_SRC ruby
config.vm.box = "ol6u5-minimal-btrfs-uek"
#+END_SRC
*** To =tobyhferguson.org=
(This will only work if you have the keys to =tobyhferguson.org=)
Publish thus:
#+BEGIN_SRC sh
scp ol6u5-minimal-btrfs-uek.box tobyhfer@tobyhferguson.org:public_html/
#+END_SRC
Add the following to your =Vagrantfile= to access this box:
#+BEGIN_SRC ruby
Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  config.vm.box = "ol6u5-minimal-btrfs-uek"
  config.vm.box_url = "http://tobyhferguson.org/oracle-6-5-x64-virtualbox.box"
end
#+END_SRC
*** To =Atlas=
Publish by logging in to the account =tobyhferguson= and uploading the box to =ol6u5-minimal-btrfs-uek=
Add the following to your =Vagrantfile= to access this box:
#+BEGIN_SRC ruby
Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  config.vm.box = "tobyhferguson/ol6u5-minimal-btrfs-uek"
end
#+END_SRC
